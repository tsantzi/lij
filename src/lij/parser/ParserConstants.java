/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package lij.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AGENT = 8;
  /** RegularExpression Id. */
  int ROLE = 9;
  /** RegularExpression Id. */
  int NULL = 10;
  /** RegularExpression Id. */
  int OR = 11;
  /** RegularExpression Id. */
  int THEN = 12;
  /** RegularExpression Id. */
  int AND = 13;
  /** RegularExpression Id. */
  int PAR = 14;
  /** RegularExpression Id. */
  int NECESSARY = 15;
  /** RegularExpression Id. */
  int INITIAL = 16;
  /** RegularExpression Id. */
  int OPTIONAL = 17;
  /** RegularExpression Id. */
  int AUXILIARY = 18;
  /** RegularExpression Id. */
  int CYCLIC = 19;
  /** RegularExpression Id. */
  int UNCOMMITTED = 20;
  /** RegularExpression Id. */
  int BYREF = 21;
  /** RegularExpression Id. */
  int MESSAGEIN = 22;
  /** RegularExpression Id. */
  int MESSAGEOUT = 23;
  /** RegularExpression Id. */
  int CONSTRAINT = 24;
  /** RegularExpression Id. */
  int CLAUSE = 25;
  /** RegularExpression Id. */
  int LPAR = 26;
  /** RegularExpression Id. */
  int RPAR = 27;
  /** RegularExpression Id. */
  int LSB = 28;
  /** RegularExpression Id. */
  int RSB = 29;
  /** RegularExpression Id. */
  int COMMA = 30;
  /** RegularExpression Id. */
  int QUOTE = 31;
  /** RegularExpression Id. */
  int SINGLEQUOTE = 32;
  /** RegularExpression Id. */
  int LISTTAIL = 33;
  /** RegularExpression Id. */
  int WILDCARD = 34;
  /** RegularExpression Id. */
  int ASSIGN = 35;
  /** RegularExpression Id. */
  int GT = 36;
  /** RegularExpression Id. */
  int LT = 37;
  /** RegularExpression Id. */
  int EQ = 38;
  /** RegularExpression Id. */
  int NEQ = 39;
  /** RegularExpression Id. */
  int VARIABLE = 40;
  /** RegularExpression Id. */
  int CAPITAL = 41;
  /** RegularExpression Id. */
  int LETTER = 42;
  /** RegularExpression Id. */
  int DIGIT = 43;
  /** RegularExpression Id. */
  int CONSTANT = 44;
  /** RegularExpression Id. */
  int NOTCAPITAL = 45;
  /** RegularExpression Id. */
  int CLETTER = 46;
  /** RegularExpression Id. */
  int CDIGIT = 47;
  /** RegularExpression Id. */
  int INTEGER = 48;
  /** RegularExpression Id. */
  int IDIGIT = 49;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 50;
  /** RegularExpression Id. */
  int DECIMAL_FLOATING_POINT_LITERAL = 51;
  /** RegularExpression Id. */
  int DECIMAL_EXPONENT = 52;
  /** RegularExpression Id. */
  int HEXADECIMAL_FLOATING_POINT_LITERAL = 53;
  /** RegularExpression Id. */
  int HEXADECIMAL_EXPONENT = 54;
  /** RegularExpression Id. */
  int STRINGLITERAL = 55;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "<token of kind 6>",
    "<token of kind 7>",
    "\"a\"",
    "\"r\"",
    "\"null\"",
    "\"or\"",
    "\"then\"",
    "\"and\"",
    "\"par\"",
    "\"necessary\"",
    "\"initial\"",
    "\"optional\"",
    "\"auxiliary\"",
    "\"cyclic\"",
    "\"uncommitted\"",
    "\"&\"",
    "\"<=\"",
    "\"=>\"",
    "\"<-\"",
    "\"::\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\"\\\"\"",
    "\"\\\'\"",
    "\"|\"",
    "\"_\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"!=\"",
    "<VARIABLE>",
    "<CAPITAL>",
    "<LETTER>",
    "<DIGIT>",
    "<CONSTANT>",
    "<NOTCAPITAL>",
    "<CLETTER>",
    "<CDIGIT>",
    "<INTEGER>",
    "<IDIGIT>",
    "<FLOATING_POINT_LITERAL>",
    "<DECIMAL_FLOATING_POINT_LITERAL>",
    "<DECIMAL_EXPONENT>",
    "<HEXADECIMAL_FLOATING_POINT_LITERAL>",
    "<HEXADECIMAL_EXPONENT>",
    "<STRINGLITERAL>",
  };

}
