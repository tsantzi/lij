/*
 * LiJ Copyright 2009 Nikolaos Chatzinikolaou nchatzi@gmail.com
 * 
 * This file is part of LiJ.
 * 
 * LiJ is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 * 
 * LiJ is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with LiJ. If not, see <http://www.gnu.org/licenses/>.
 */



/**
	Demonstrates the _findPeers special constraint,
	as well as the use of a tri-state constraints (using a button for input).
*/



r(agent, initial)
r(pinger(S), auxiliary)



a(agent, A) ::
	(
		(
			null <- waitForClick()
			then
			null <- _findPeers("agent", S)
			then
			(
				a(pinger(S), A)
				or
				a(agent, A)
			)
		)
		or
		(
			ping() <= a(pinger, X)
			then
			null <- gotPing(X)
		)
	)
	then
    a(agent, A)



a(pinger(S), A) ::
	null <- S = [H | Sr]
	then
   	ping() => a(agent, H)
    then
    a(pinger(Sr), A)

    